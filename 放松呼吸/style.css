*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    background: #224941 url(./img/bg.jpg) no-repeat center center/cover;
    color: #ffffff;
    /* vh就是当前屏幕可见高度的1%，也就是说
        height:100vh == height:100%;
        但是有个好处是当元素没有内容时候，设置height:100%该元素不会被撑开，
        但是设置height:100vh，该元素会被撑开屏幕高度一致。 */
    min-height: 100vh;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    /* align-items：设置了flex容器的对齐方式 */
    align-items: center;
    margin: 0;
}
.container{
    display: flex;
    align-items: center;
    /* 规定元素在弹性盒主轴居中排列 */
    justify-content: center;
    margin: auto;
    height: 300px;
    width: 300px;
    position: relative;
    /* 水平和垂直方向同时放大一倍 */
    transform: scale(1);
}
.circle{
    background-color: #010f1c;
    height: 100%;
    width: 100%;
    border-radius: 50%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
}
.gradient-circle{
    /* 追星渐变色 */
    background: conic-gradient(
        #55b7a4 0%,
        #4ca493 40%,
        #fff 40%,
        #fff 60%,
        #336d62 60%,
        #2a5b52 100%    
    );
    height: 320px;
    width: 320px;
    border-radius: 50%;
    z-index: -2;
    position: absolute;
    top: -10px;
    left: -10px;
}
.pointer-container{
    width: 20px;
    height: 190px;
    top: -40px;
    left: 140px;
    position: absolute;
    transform-origin: bottom center;
    animation: rotate 7.5s linear forwards infinite;
}
@keyframes rotate{
    from{
        transform: rotate(0deg);
    }
    to{
        transform: rotate(360deg);
    }
}
.pointer{
    height: 20px;
    width: 20px;
    background-color: #fff;
    border-radius: 50%;
    display: block;
}
.container.grow{
    animation: grow 3s linear forwards;
}
@keyframes grow{
    from{
        transform: scale(1);
    }
    to{
        transform: scale(1.2);
    }
}
.container.shrink{
    animation: shrink 3s linear forwards;
}
@keyframes shrink{
    from{
        transform: scale(1.2);
    }
    to{
        transform: scale(1);
    }
}